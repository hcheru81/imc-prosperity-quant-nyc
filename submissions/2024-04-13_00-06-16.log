Sandbox logs:
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7e013194-b7da-48f5-903f-d5e12ab270ca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7e013194-b7da-48f5-903f-d5e12ab270ca\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 0
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"c838339e-2fca-44a9-8480-0af838c43954\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"c838339e-2fca-44a9-8480-0af838c43954\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1b6fee74-ac55-401b-8145-57a50c8ff27a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1b6fee74-ac55-401b-8145-57a50c8ff27a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2795b121-d022-4004-8ff9-1ef2240de70a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2795b121-d022-4004-8ff9-1ef2240de70a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d9bdc9e7-7b63-463c-be5c-7013e1556a28\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d9bdc9e7-7b63-463c-be5c-7013e1556a28\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d83471ab-231e-4b79-a653-549de71d5dfc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d83471ab-231e-4b79-a653-549de71d5dfc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"8eb20905-dced-4f67-b4ad-3ae0167c9e1a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"8eb20905-dced-4f67-b4ad-3ae0167c9e1a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"bb97a636-6320-40e3-8a76-383551512d79\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"bb97a636-6320-40e3-8a76-383551512d79\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"adfcddc7-d634-4b42-b9b5-7d7ef99eca2e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"adfcddc7-d634-4b42-b9b5-7d7ef99eca2e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7dc56dca-44da-4594-9a81-f4eae9596bb9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7dc56dca-44da-4594-9a81-f4eae9596bb9\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"097aa7ab-4713-4c9d-9fb8-845c058da758\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"097aa7ab-4713-4c9d-9fb8-845c058da758\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"bc3f2f87-c58c-4bd1-baa1-39ac79241fae\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"bc3f2f87-c58c-4bd1-baa1-39ac79241fae\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"52a15a86-5650-42f4-802a-66f8ef23aa0a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"52a15a86-5650-42f4-802a-66f8ef23aa0a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2b50e3ea-dd4d-43d4-a8c3-7f1a34fc280a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2b50e3ea-dd4d-43d4-a8c3-7f1a34fc280a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"adb57d04-4f1d-49b3-a4e2-6176206eb727\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"adb57d04-4f1d-49b3-a4e2-6176206eb727\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"8a7352a7-4495-4630-b8d0-874d15ed34b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"8a7352a7-4495-4630-b8d0-874d15ed34b4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"03085ed8-333b-4865-a313-262b62cffdf0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"03085ed8-333b-4865-a313-262b62cffdf0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0c217a5e-baa7-424e-870a-ca3188b6725d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0c217a5e-baa7-424e-870a-ca3188b6725d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d194744b-5d15-43a2-938f-9070afc52f3b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d194744b-5d15-43a2-938f-9070afc52f3b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"ae90eadd-fee3-413f-a472-5e3330298cb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"ae90eadd-fee3-413f-a472-5e3330298cb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 1900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2cd76473-850e-4f67-bded-672960f3ba03\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2cd76473-850e-4f67-bded-672960f3ba03\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 2000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"537436f1-009d-4139-a523-171cba9fbba6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"537436f1-009d-4139-a523-171cba9fbba6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 2100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"385efbad-d74c-436c-ad5e-f4f00b6cf46b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"385efbad-d74c-436c-ad5e-f4f00b6cf46b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 2200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1e64bdc1-c939-452f-9470-8301a6e306c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1e64bdc1-c939-452f-9470-8301a6e306c1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 2300
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"2b72be89-da49-4456-a6aa-aa25dfd73cba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"2b72be89-da49-4456-a6aa-aa25dfd73cba\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 2400
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"0b3b6211-6839-496a-b2ec-1b558bbd20c6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"0b3b6211-6839-496a-b2ec-1b558bbd20c6\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 2500
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"171c64b6-e090-4e0f-b2b7-190f3e32f3a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"171c64b6-e090-4e0f-b2b7-190f3e32f3a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 2600
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"712d7a31-15cc-4834-a9ee-3be37d113170\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"712d7a31-15cc-4834-a9ee-3be37d113170\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 2700
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"ff002a25-3fd0-432c-bc27-d8d17032ca96\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"ff002a25-3fd0-432c-bc27-d8d17032ca96\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 2800
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"5964a630-7f3a-485f-9cbd-4073d79464b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"5964a630-7f3a-485f-9cbd-4073d79464b1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 2900
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"bf5c9d82-a5d8-42e8-9564-8552567da4fd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"bf5c9d82-a5d8-42e8-9564-8552567da4fd\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 3000
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"fbc26c0b-72a0-4cce-9bc2-47ee012f83f2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"fbc26c0b-72a0-4cce-9bc2-47ee012f83f2\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 3100
}
{
  "sandboxLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"76b7f998-e343-46d6-929a-ab82349652f1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"\", \"errorType\": \"AssertionError\", \"requestId\": \"76b7f998-e343-46d6-929a-ab82349652f1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 116, in get_orders\\n    assert buy_amount > 0\\n\"]}",
  "timestamp": 3200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"5977690d-8973-46a4-addd-a20a5e57521e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"5977690d-8973-46a4-addd-a20a5e57521e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6eaa726a-a532-45c2-8d1b-55c181839364\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6eaa726a-a532-45c2-8d1b-55c181839364\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"de97aafd-a080-4bab-beaf-161a237e96af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"de97aafd-a080-4bab-beaf-161a237e96af\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d59e9946-d517-4566-b518-03589121dc3d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d59e9946-d517-4566-b518-03589121dc3d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"f68b4643-8da0-444c-a444-c717474d264f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"f68b4643-8da0-444c-a444-c717474d264f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d596d331-f83c-45c1-b43d-d5cc4d979110\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d596d331-f83c-45c1-b43d-d5cc4d979110\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"a08578ad-496c-4596-9f7d-f69b03fa7421\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"a08578ad-496c-4596-9f7d-f69b03fa7421\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 3900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"f9eeda88-0e75-4317-8b6b-d0801d35978a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"f9eeda88-0e75-4317-8b6b-d0801d35978a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6cfc889f-c9c7-4c9b-b64d-42ca7d7dbeb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6cfc889f-c9c7-4c9b-b64d-42ca7d7dbeb7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"23c4e9a9-5a1e-4736-a0c7-8ea23832a1df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"23c4e9a9-5a1e-4736-a0c7-8ea23832a1df\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"34dd8b22-1472-4a22-b913-9a313c4dfc35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"34dd8b22-1472-4a22-b913-9a313c4dfc35\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"a0a3e395-426f-43ec-9be4-e73c53f5bce1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"a0a3e395-426f-43ec-9be4-e73c53f5bce1\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"ea3ff8e6-3c7e-460e-932f-737e734af3ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"ea3ff8e6-3c7e-460e-932f-737e734af3ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"3824985f-c8d6-427f-bf02-5a65f84574e4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"3824985f-c8d6-427f-bf02-5a65f84574e4\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"c350b1e4-f2d6-449d-8f98-8130738ab2db\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"c350b1e4-f2d6-449d-8f98-8130738ab2db\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2ed24416-fbf4-47e8-a680-75668afe3793\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2ed24416-fbf4-47e8-a680-75668afe3793\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"5339dc0f-0fd6-4be5-8916-1349158f976d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"5339dc0f-0fd6-4be5-8916-1349158f976d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 4900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"3f39661a-1c9a-4546-8ec9-5c3bde5e40b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"3f39661a-1c9a-4546-8ec9-5c3bde5e40b3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"76ac98df-e884-4247-ad8a-552751414474\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"76ac98df-e884-4247-ad8a-552751414474\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0749edc7-4b8c-49cc-a7ec-662f496ecf1b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0749edc7-4b8c-49cc-a7ec-662f496ecf1b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"26059abc-7231-4b17-9101-304286dfa7e7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"26059abc-7231-4b17-9101-304286dfa7e7\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9423aed0-f8da-47d4-b26f-3ba3853fbf6d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9423aed0-f8da-47d4-b26f-3ba3853fbf6d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"accc880b-2f22-44a8-9c9d-cea7c0529158\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"accc880b-2f22-44a8-9c9d-cea7c0529158\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"b89c96d6-27cd-4e62-ad01-a3e2f9f76551\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"b89c96d6-27cd-4e62-ad01-a3e2f9f76551\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"b5acfa26-7f3c-420f-8026-4c2596a3de9c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"b5acfa26-7f3c-420f-8026-4c2596a3de9c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6faace1e-86ac-4040-b265-1de2d69de454\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6faace1e-86ac-4040-b265-1de2d69de454\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"19724bf2-9532-487e-965e-a15f88d4239e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"19724bf2-9532-487e-965e-a15f88d4239e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 5900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"a5a5dbda-25fd-43be-8f71-4bfe57cff335\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"a5a5dbda-25fd-43be-8f71-4bfe57cff335\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"44cb3bdb-22a7-4b73-ae4a-031c3703d1b0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"44cb3bdb-22a7-4b73-ae4a-031c3703d1b0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"eaa6a75f-1b3c-4a13-a3e2-f1ec9db024d0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"eaa6a75f-1b3c-4a13-a3e2-f1ec9db024d0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6729e02f-07e2-4fca-91b3-f78c188edec3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"6729e02f-07e2-4fca-91b3-f78c188edec3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"4c4c6fa6-4ab1-4eba-b155-409454e9c63a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"4c4c6fa6-4ab1-4eba-b155-409454e9c63a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1b07cd58-0cde-43ad-a9a9-54f67de90328\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1b07cd58-0cde-43ad-a9a9-54f67de90328\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0cdf69d5-fddc-4817-be73-09a6b02af803\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0cdf69d5-fddc-4817-be73-09a6b02af803\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"645784ab-9223-44d4-8fbb-dc65f2d6a40d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"645784ab-9223-44d4-8fbb-dc65f2d6a40d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"64d0aa36-f369-4d81-8082-133b7dc91e80\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"64d0aa36-f369-4d81-8082-133b7dc91e80\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"dfa04279-2314-4fce-a8ef-3c036c550ad8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"dfa04279-2314-4fce-a8ef-3c036c550ad8\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 6900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7b371584-1cfb-4edf-8a99-c75d6e2f0f15\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7b371584-1cfb-4edf-8a99-c75d6e2f0f15\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"b23aac3e-da76-45c6-944a-40e254371350\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"b23aac3e-da76-45c6-944a-40e254371350\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"43de1751-6d07-400a-9b4d-c1b0b769cc78\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"43de1751-6d07-400a-9b4d-c1b0b769cc78\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7def8cfd-d685-4129-a347-8c9f64e83b5c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"7def8cfd-d685-4129-a347-8c9f64e83b5c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"63d2cfad-61bc-4684-9866-f8692f215440\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"63d2cfad-61bc-4684-9866-f8692f215440\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9b7c5d4e-25d3-46d2-85ed-62fd1f13e2fb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9b7c5d4e-25d3-46d2-85ed-62fd1f13e2fb\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9cf76309-61a8-4c06-bb13-83db134cd24f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9cf76309-61a8-4c06-bb13-83db134cd24f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"defe98db-fb68-4a91-befd-fe725f6d795d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"defe98db-fb68-4a91-befd-fe725f6d795d\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d74cd688-663c-48d6-8ce9-16c2bf02f92e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d74cd688-663c-48d6-8ce9-16c2bf02f92e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0b599450-2770-4f67-9be0-bd59df3f6381\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0b599450-2770-4f67-9be0-bd59df3f6381\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 7900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"47aa5fb7-2f95-440f-b4b8-015a710bdf5c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"47aa5fb7-2f95-440f-b4b8-015a710bdf5c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"065f410e-1cbd-40f6-879c-70b43aa409a3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"065f410e-1cbd-40f6-879c-70b43aa409a3\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"786ae630-4288-4ff3-8eab-897899d5f25c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"786ae630-4288-4ff3-8eab-897899d5f25c\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2d60ab25-aaa5-4220-b8f6-bc40e67fd9ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"2d60ab25-aaa5-4220-b8f6-bc40e67fd9ab\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"c34128e4-f9b8-4a69-af6b-80d0acffee52\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"c34128e4-f9b8-4a69-af6b-80d0acffee52\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"cf7485ab-bc93-460c-b9bf-64babc770385\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"cf7485ab-bc93-460c-b9bf-64babc770385\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d82d20c4-d8b1-43d8-b132-5b69364965fc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d82d20c4-d8b1-43d8-b132-5b69364965fc\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9a22d756-8511-49ef-8d50-d290bcee26a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"9a22d756-8511-49ef-8d50-d290bcee26a5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"de6ac498-f258-4388-80d7-9d9c7f1ca74b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"de6ac498-f258-4388-80d7-9d9c7f1ca74b\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0daca68f-15b3-42ca-96da-1a120c1cca9a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"0daca68f-15b3-42ca-96da-1a120c1cca9a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 8900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1af11706-6397-4939-902a-5fac21c12f8e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"1af11706-6397-4939-902a-5fac21c12f8e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9000
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"96403db0-7c3b-4c19-97ae-6de294c103a0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"96403db0-7c3b-4c19-97ae-6de294c103a0\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9100
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"969613ae-8668-4f0b-98d4-cafa4659c812\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"969613ae-8668-4f0b-98d4-cafa4659c812\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9200
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"960f3080-ea2e-46a0-ad61-e96dc76a8d0e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"960f3080-ea2e-46a0-ad61-e96dc76a8d0e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9300
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"fe7cf21a-4cd8-401c-8bda-52bf25088d3a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"fe7cf21a-4cd8-401c-8bda-52bf25088d3a\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9400
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"ada39633-7505-4d7f-a1f5-81aa06a9201f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"ada39633-7505-4d7f-a1f5-81aa06a9201f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9500
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"fd2b6435-0221-4f6f-a076-1021450b8826\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"fd2b6435-0221-4f6f-a076-1021450b8826\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9600
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d670016d-6ad4-4fb5-b539-b373d284ab62\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"d670016d-6ad4-4fb5-b539-b373d284ab62\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9700
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"02e6ef5f-e263-4ac4-b382-a15d81ee897e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"02e6ef5f-e263-4ac4-b382-a15d81ee897e\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9800
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"582585fe-c705-4f9f-b197-c2d3ac2fbfe5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"582585fe-c705-4f9f-b197-c2d3ac2fbfe5\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 9900
}
{
  "sandboxLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"8642445c-c8ce-40bd-ba30-eb558d991a4f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "lambdaLog": "{\"errorMessage\": \"'ORCHIDS'\", \"errorType\": \"KeyError\", \"requestId\": \"8642445c-c8ce-40bd-ba30-eb558d991a4f\", \"stackTrace\": [\"  File \\\"/var/task/app.py\\\", line 31, in lambda_handler\\n    orders, conversion, traderData = trader.run(trading_state)\\n\", \"  File \\\"/var/task/trader.py\\\", line 234, in run\\n    orders = self.get_orders(state, product_acceptable_price, product)\\n\", \"  File \\\"/var/task/trader.py\\\", line 84, in get_orders\\n    product_position_limit = POSITION_LIMITS[product]\\n\"]}",
  "timestamp": 10000
}
{
  "sandboxLog": "Lambda errors have reached maximum value for submission b0722fbf-92b7-459f-822e-aa0d5b73e9dd",
  "lambdaLog": null,
  "timestamp": 170338
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss




Trade History:
null